<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yeepay.dao.multiRefundQuery.mapper.MultiRefundQueryMapper">
  <resultMap id="BaseResultMap" type="com.yeepay.dao.multiRefundQuery.domain.MultiRefundQuery">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="merchant_no" jdbcType="VARCHAR" property="merchantNo" />
    <result column="parent_merchant_no" jdbcType="VARCHAR" property="parentMerchantNo" />
    <result column="hmac" jdbcType="VARCHAR" property="hmac" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="request_date_begin" jdbcType="VARCHAR" property="requestDateBegin" />
    <result column="request_date_end" jdbcType="VARCHAR" property="requestDateEnd" />
    <result column="page_no" jdbcType="VARCHAR" property="pageNo" />
    <result column="page_size" jdbcType="VARCHAR" property="pageSize" />
    <result column="message" jdbcType="VARCHAR" property="message" />
    <result column="total_records" jdbcType="VARCHAR" property="totalRecords" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, merchant_no, parent_merchant_no, hmac, code, status, request_date_begin, request_date_end, 
    page_no, page_size, message, total_records
  </sql>
  <select id="selectByExample" parameterType="com.yeepay.dao.multiRefundQuery.domain.MultiRefundQueryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from multi_refund_query
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart>= 0">
       limit ${limitStart} , ${limitLength}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yeepay.dao.multiRefundQuery.domain.MultiRefundQueryExample">
    delete from multi_refund_query
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yeepay.dao.multiRefundQuery.domain.MultiRefundQuery">
    insert into multi_refund_query (id, merchant_no, parent_merchant_no, 
      hmac, code, status, 
      request_date_begin, request_date_end, page_no, 
      page_size, message, total_records
      )
    values (#{id,jdbcType=INTEGER}, #{merchantNo,jdbcType=VARCHAR}, #{parentMerchantNo,jdbcType=VARCHAR}, 
      #{hmac,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{requestDateBegin,jdbcType=VARCHAR}, #{requestDateEnd,jdbcType=VARCHAR}, #{pageNo,jdbcType=VARCHAR}, 
      #{pageSize,jdbcType=VARCHAR}, #{message,jdbcType=VARCHAR}, #{totalRecords,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yeepay.dao.multiRefundQuery.domain.MultiRefundQuery">
    insert into multi_refund_query
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="merchantNo != null">
        merchant_no,
      </if>
      <if test="parentMerchantNo != null">
        parent_merchant_no,
      </if>
      <if test="hmac != null">
        hmac,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="requestDateBegin != null">
        request_date_begin,
      </if>
      <if test="requestDateEnd != null">
        request_date_end,
      </if>
      <if test="pageNo != null">
        page_no,
      </if>
      <if test="pageSize != null">
        page_size,
      </if>
      <if test="message != null">
        message,
      </if>
      <if test="totalRecords != null">
        total_records,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="merchantNo != null">
        #{merchantNo,jdbcType=VARCHAR},
      </if>
      <if test="parentMerchantNo != null">
        #{parentMerchantNo,jdbcType=VARCHAR},
      </if>
      <if test="hmac != null">
        #{hmac,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="requestDateBegin != null">
        #{requestDateBegin,jdbcType=VARCHAR},
      </if>
      <if test="requestDateEnd != null">
        #{requestDateEnd,jdbcType=VARCHAR},
      </if>
      <if test="pageNo != null">
        #{pageNo,jdbcType=VARCHAR},
      </if>
      <if test="pageSize != null">
        #{pageSize,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="totalRecords != null">
        #{totalRecords,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yeepay.dao.multiRefundQuery.domain.MultiRefundQueryExample" resultType="java.lang.Long">
    select count(*) from multi_refund_query
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update multi_refund_query
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.merchantNo != null">
        merchant_no = #{record.merchantNo,jdbcType=VARCHAR},
      </if>
      <if test="record.parentMerchantNo != null">
        parent_merchant_no = #{record.parentMerchantNo,jdbcType=VARCHAR},
      </if>
      <if test="record.hmac != null">
        hmac = #{record.hmac,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.requestDateBegin != null">
        request_date_begin = #{record.requestDateBegin,jdbcType=VARCHAR},
      </if>
      <if test="record.requestDateEnd != null">
        request_date_end = #{record.requestDateEnd,jdbcType=VARCHAR},
      </if>
      <if test="record.pageNo != null">
        page_no = #{record.pageNo,jdbcType=VARCHAR},
      </if>
      <if test="record.pageSize != null">
        page_size = #{record.pageSize,jdbcType=VARCHAR},
      </if>
      <if test="record.message != null">
        message = #{record.message,jdbcType=VARCHAR},
      </if>
      <if test="record.totalRecords != null">
        total_records = #{record.totalRecords,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update multi_refund_query
    set id = #{record.id,jdbcType=INTEGER},
      merchant_no = #{record.merchantNo,jdbcType=VARCHAR},
      parent_merchant_no = #{record.parentMerchantNo,jdbcType=VARCHAR},
      hmac = #{record.hmac,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      request_date_begin = #{record.requestDateBegin,jdbcType=VARCHAR},
      request_date_end = #{record.requestDateEnd,jdbcType=VARCHAR},
      page_no = #{record.pageNo,jdbcType=VARCHAR},
      page_size = #{record.pageSize,jdbcType=VARCHAR},
      message = #{record.message,jdbcType=VARCHAR},
      total_records = #{record.totalRecords,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>