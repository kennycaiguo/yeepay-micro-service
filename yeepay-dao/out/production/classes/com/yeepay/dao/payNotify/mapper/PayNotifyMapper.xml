<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yeepay.dao.payNotify.mapper.PayNotifyMapper">
  <resultMap id="BaseResultMap" type="com.yeepay.dao.payNotify.domain.PayNotify">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="merchant_no" jdbcType="VARCHAR" property="merchantNo" />
    <result column="parent_merchant_no" jdbcType="VARCHAR" property="parentMerchantNo" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="unique_order_no" jdbcType="VARCHAR" property="uniqueOrderNo" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="order_amount" jdbcType="VARCHAR" property="orderAmount" />
    <result column="pay_amount" jdbcType="VARCHAR" property="payAmount" />
    <result column="pay_success_date" jdbcType="VARCHAR" property="paySuccessDate" />
    <result column="inst_company" jdbcType="VARCHAR" property="instCompany" />
    <result column="inst_number" jdbcType="VARCHAR" property="instNumber" />
    <result column="payment_product" jdbcType="VARCHAR" property="paymentProduct" />
    <result column="platform_type" jdbcType="VARCHAR" property="platformType" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="union_id" jdbcType="VARCHAR" property="unionId" />
    <result column="request_date" jdbcType="VARCHAR" property="requestDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, merchant_no, parent_merchant_no, order_id, unique_order_no, status, order_amount, 
    pay_amount, pay_success_date, inst_company, inst_number, payment_product, platform_type, 
    open_id, union_id, request_date
  </sql>
  <select id="selectByExample" parameterType="com.yeepay.dao.payNotify.domain.PayNotifyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pay_notify
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart>= 0">
       limit ${limitStart} , ${limitLength}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yeepay.dao.payNotify.domain.PayNotifyExample">
    delete from pay_notify
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yeepay.dao.payNotify.domain.PayNotify">
    insert into pay_notify (id, merchant_no, parent_merchant_no, 
      order_id, unique_order_no, status, 
      order_amount, pay_amount, pay_success_date, 
      inst_company, inst_number, payment_product, 
      platform_type, open_id, union_id, 
      request_date)
    values (#{id,jdbcType=INTEGER}, #{merchantNo,jdbcType=VARCHAR}, #{parentMerchantNo,jdbcType=VARCHAR}, 
      #{orderId,jdbcType=VARCHAR}, #{uniqueOrderNo,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{orderAmount,jdbcType=VARCHAR}, #{payAmount,jdbcType=VARCHAR}, #{paySuccessDate,jdbcType=VARCHAR}, 
      #{instCompany,jdbcType=VARCHAR}, #{instNumber,jdbcType=VARCHAR}, #{paymentProduct,jdbcType=VARCHAR}, 
      #{platformType,jdbcType=VARCHAR}, #{openId,jdbcType=VARCHAR}, #{unionId,jdbcType=VARCHAR}, 
      #{requestDate,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yeepay.dao.payNotify.domain.PayNotify">
    insert into pay_notify
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="merchantNo != null">
        merchant_no,
      </if>
      <if test="parentMerchantNo != null">
        parent_merchant_no,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="uniqueOrderNo != null">
        unique_order_no,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="orderAmount != null">
        order_amount,
      </if>
      <if test="payAmount != null">
        pay_amount,
      </if>
      <if test="paySuccessDate != null">
        pay_success_date,
      </if>
      <if test="instCompany != null">
        inst_company,
      </if>
      <if test="instNumber != null">
        inst_number,
      </if>
      <if test="paymentProduct != null">
        payment_product,
      </if>
      <if test="platformType != null">
        platform_type,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="unionId != null">
        union_id,
      </if>
      <if test="requestDate != null">
        request_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="merchantNo != null">
        #{merchantNo,jdbcType=VARCHAR},
      </if>
      <if test="parentMerchantNo != null">
        #{parentMerchantNo,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="uniqueOrderNo != null">
        #{uniqueOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="orderAmount != null">
        #{orderAmount,jdbcType=VARCHAR},
      </if>
      <if test="payAmount != null">
        #{payAmount,jdbcType=VARCHAR},
      </if>
      <if test="paySuccessDate != null">
        #{paySuccessDate,jdbcType=VARCHAR},
      </if>
      <if test="instCompany != null">
        #{instCompany,jdbcType=VARCHAR},
      </if>
      <if test="instNumber != null">
        #{instNumber,jdbcType=VARCHAR},
      </if>
      <if test="paymentProduct != null">
        #{paymentProduct,jdbcType=VARCHAR},
      </if>
      <if test="platformType != null">
        #{platformType,jdbcType=VARCHAR},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="unionId != null">
        #{unionId,jdbcType=VARCHAR},
      </if>
      <if test="requestDate != null">
        #{requestDate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yeepay.dao.payNotify.domain.PayNotifyExample" resultType="java.lang.Long">
    select count(*) from pay_notify
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pay_notify
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.merchantNo != null">
        merchant_no = #{record.merchantNo,jdbcType=VARCHAR},
      </if>
      <if test="record.parentMerchantNo != null">
        parent_merchant_no = #{record.parentMerchantNo,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.uniqueOrderNo != null">
        unique_order_no = #{record.uniqueOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.orderAmount != null">
        order_amount = #{record.orderAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.payAmount != null">
        pay_amount = #{record.payAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.paySuccessDate != null">
        pay_success_date = #{record.paySuccessDate,jdbcType=VARCHAR},
      </if>
      <if test="record.instCompany != null">
        inst_company = #{record.instCompany,jdbcType=VARCHAR},
      </if>
      <if test="record.instNumber != null">
        inst_number = #{record.instNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentProduct != null">
        payment_product = #{record.paymentProduct,jdbcType=VARCHAR},
      </if>
      <if test="record.platformType != null">
        platform_type = #{record.platformType,jdbcType=VARCHAR},
      </if>
      <if test="record.openId != null">
        open_id = #{record.openId,jdbcType=VARCHAR},
      </if>
      <if test="record.unionId != null">
        union_id = #{record.unionId,jdbcType=VARCHAR},
      </if>
      <if test="record.requestDate != null">
        request_date = #{record.requestDate,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pay_notify
    set id = #{record.id,jdbcType=INTEGER},
      merchant_no = #{record.merchantNo,jdbcType=VARCHAR},
      parent_merchant_no = #{record.parentMerchantNo,jdbcType=VARCHAR},
      order_id = #{record.orderId,jdbcType=VARCHAR},
      unique_order_no = #{record.uniqueOrderNo,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      order_amount = #{record.orderAmount,jdbcType=VARCHAR},
      pay_amount = #{record.payAmount,jdbcType=VARCHAR},
      pay_success_date = #{record.paySuccessDate,jdbcType=VARCHAR},
      inst_company = #{record.instCompany,jdbcType=VARCHAR},
      inst_number = #{record.instNumber,jdbcType=VARCHAR},
      payment_product = #{record.paymentProduct,jdbcType=VARCHAR},
      platform_type = #{record.platformType,jdbcType=VARCHAR},
      open_id = #{record.openId,jdbcType=VARCHAR},
      union_id = #{record.unionId,jdbcType=VARCHAR},
      request_date = #{record.requestDate,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>